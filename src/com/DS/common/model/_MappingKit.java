package com.DS.common.model;

import com.jfinal.plugin.activerecord.ActiveRecordPlugin;

/**
 * Generated by JFinal, do not modify this file.
 * <pre>
 * Example:
 * public void configPlugin(Plugins me) {
 *     ActiveRecordPlugin arp = new ActiveRecordPlugin(...);
 *     _MappingKit.mapping(arp);
 *     me.add(arp);
 * }
 * </pre>
 */
public class _MappingKit {
	
	public static void mapping(ActiveRecordPlugin arp) {
		arp.addMapping("blog", "id", Blog.class);
		arp.addMapping("ds_remind", "id", DsRemind.class);
		arp.addMapping("early_warning_rule", "id", EarlyWarningRule.class);
		arp.addMapping("echarts", "id", Echarts.class);
		arp.addMapping("materialtree", "id", Materialtree.class);
		arp.addMapping("menu", "id", Menu.class);
		arp.addMapping("order_item", "id", OrderItem.class);
		arp.addMapping("orders", "id", Orders.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_blob_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzBlobTriggers.class);
		// Composite Primary Key order: CALENDAR_NAME,SCHED_NAME
		arp.addMapping("qrtz_calendars", "CALENDAR_NAME,SCHED_NAME", QrtzCalendars.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_cron_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzCronTriggers.class);
		// Composite Primary Key order: ENTRY_ID,SCHED_NAME
		arp.addMapping("qrtz_fired_triggers", "ENTRY_ID,SCHED_NAME", QrtzFiredTriggers.class);
		// Composite Primary Key order: JOB_GROUP,JOB_NAME,SCHED_NAME
		arp.addMapping("qrtz_job_details", "JOB_GROUP,JOB_NAME,SCHED_NAME", QrtzJobDetails.class);
		// Composite Primary Key order: LOCK_NAME,SCHED_NAME
		arp.addMapping("qrtz_locks", "LOCK_NAME,SCHED_NAME", QrtzLocks.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP
		arp.addMapping("qrtz_paused_trigger_grps", "SCHED_NAME,TRIGGER_GROUP", QrtzPausedTriggerGrps.class);
		// Composite Primary Key order: INSTANCE_NAME,SCHED_NAME
		arp.addMapping("qrtz_scheduler_state", "INSTANCE_NAME,SCHED_NAME", QrtzSchedulerState.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_simple_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzSimpleTriggers.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_simprop_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzSimpropTriggers.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzTriggers.class);
		arp.addMapping("task", "taskId", Task.class);
		arp.addMapping("th_earlywarning_order", "id", ThEarlywarningOrder.class);
		arp.addMapping("th_earlywarning_rule", "id", ThEarlywarningRule.class);
		arp.addMapping("user", "id", User.class);
		arp.addMapping("ztree", "id", Ztree.class);
	}
}

